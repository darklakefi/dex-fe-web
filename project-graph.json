{
  "graph": {
    "dependencies": {
      "config": [],
      "ui": [
        {
          "source": "ui",
          "target": "config",
          "type": "static"
        },
        {
          "source": "ui",
          "target": "utils",
          "type": "static"
        }
      ],
      "utils": [
        {
          "source": "utils",
          "target": "config",
          "type": "static"
        }
      ],
      "web": [
        {
          "source": "web",
          "target": "ui",
          "type": "static"
        },
        {
          "source": "web",
          "target": "utils",
          "type": "static"
        },
        {
          "source": "web",
          "target": "config",
          "type": "static"
        }
      ],
      "web-e2e": [
        {
          "source": "web-e2e",
          "target": "web",
          "type": "implicit"
        },
        {
          "source": "web-e2e",
          "target": "config",
          "type": "static"
        }
      ]
    },
    "nodes": {
      "ui": {
        "data": {
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": [],
          "metadata": {
            "js": {
              "isInPackageManagerWorkspaces": true,
              "packageExports": {
                ".": {
                  "default": "./src/index.ts",
                  "import": "./src/index.ts",
                  "types": "./src/index.ts"
                }
              },
              "packageName": "@dex-web/ui"
            },
            "targetGroups": {}
          },
          "name": "ui",
          "projectType": "library",
          "root": "libs/ui",
          "sourceRoot": "libs/ui/src",
          "tags": ["npm:public"],
          "targets": {
            "build-storybook": {
              "cache": true,
              "configurations": {},
              "executor": "nx:run-commands",
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "storybook",
                    "@storybook/test-runner"
                  ]
                }
              ],
              "options": {
                "command": "storybook build",
                "cwd": "libs/ui"
              },
              "outputs": [
                "{projectRoot}/storybook-static",
                "{options.output-dir}",
                "{options.outputDir}",
                "{options.o}"
              ],
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "configurations": {},
              "executor": "nx:run-commands",
              "options": {
                "command": "biome check  --write --config-path=libs/ui/biome.json --verbose libs/ui/**/*"
              },
              "parallelism": true
            },
            "nx-release-publish": {
              "configurations": {},
              "dependsOn": ["^nx-release-publish"],
              "executor": "@nx/js:release-publish",
              "options": {},
              "parallelism": true
            },
            "static-storybook": {
              "configurations": {},
              "continuous": true,
              "dependsOn": ["build-storybook"],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build-storybook",
                "staticFilePath": "libs/ui/storybook-static"
              },
              "parallelism": true
            },
            "storybook": {
              "configurations": {},
              "continuous": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "storybook dev",
                "cwd": "libs/ui",
                "port": 6006
              },
              "parallelism": true
            },
            "test": {
              "cache": true,
              "configurations": {},
              "executor": "@nx/vite:test",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                }
              ],
              "options": {
                "config": "libs/ui/vite.config.ts",
                "reportsDirectory": "../../coverage/libs/ui"
              },
              "outputs": ["{options.reportsDirectory}"],
              "parallelism": true
            },
            "test-storybook": {
              "configurations": {},
              "executor": "nx:run-commands",
              "inputs": [
                {
                  "externalDependencies": [
                    "storybook",
                    "@storybook/test-runner"
                  ]
                }
              ],
              "options": {
                "command": "test-storybook",
                "cwd": "libs/ui"
              },
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "configurations": {},
              "dependsOn": ["^typecheck"],
              "executor": "nx:run-commands",
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/tsconfig.storybook.json",
                "{workspaceRoot}/vite.config.base.ts",
                "{projectRoot}/src/**/*.js",
                "{projectRoot}/src/**/*.jsx",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/src/**/*.tsx",
                "{projectRoot}/vite.config.ts",
                "{projectRoot}/vite.config.mts",
                "{projectRoot}/vitest.config.ts",
                "{projectRoot}/vitest.config.mts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.test.tsx",
                "{projectRoot}/src/**/*.spec.tsx",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.jsx",
                "{projectRoot}/src/**/*.spec.jsx",
                "{projectRoot}/src/**/*.d.ts",
                "{projectRoot}/src/**/*.stories.ts",
                "{projectRoot}/src/**/*.stories.js",
                "{projectRoot}/src/**/*.stories.jsx",
                "{projectRoot}/src/**/*.stories.tsx",
                "{projectRoot}/src/**/*.stories.mdx",
                "{projectRoot}/.storybook/*.js",
                "{projectRoot}/.storybook/*.ts",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{projectRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "metadata": {
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                },
                "technologies": ["typescript"]
              },
              "options": {
                "command": "tsc --build --emitDeclarationOnly",
                "cwd": "libs/ui"
              },
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{workspaceRoot}/dist/libs/ui/**/*.d.ts",
                "{workspaceRoot}/dist/libs/ui/**/*.d.ts.map",
                "{workspaceRoot}/dist/libs/ui/tsconfig.lib.tsbuildinfo"
              ],
              "parallelism": true,
              "syncGenerators": ["@nx/js:typescript-sync"]
            }
          }
        },
        "name": "ui",
        "type": "lib"
      },

      "utils": {
        "data": {
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": [],
          "metadata": {
            "js": {
              "isInPackageManagerWorkspaces": true,
              "packageExports": {
                ".": {
                  "default": "./src/index.ts",
                  "import": "./src/index.ts",
                  "types": "./src/index.ts"
                }
              },
              "packageName": "@dex-web/utils"
            },
            "targetGroups": {}
          },
          "name": "utils",
          "projectType": "library",
          "root": "libs/utils",
          "sourceRoot": "libs/utils/src",
          "tags": ["npm:public"],
          "targets": {
            "build": {
              "cache": true,
              "configurations": {},
              "executor": "@nx/vite:build",
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "options": {
                "outputPath": "dist/libs/utils"
              },
              "outputs": ["{options.outputPath}"],
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "configurations": {},
              "executor": "nx:run-commands",
              "options": {
                "command": "biome check  --write --config-path=libs/utils/biome.json --verbose libs/utils/**/*"
              },
              "parallelism": true
            },
            "nx-release-publish": {
              "configurations": {},
              "dependsOn": ["^nx-release-publish"],
              "executor": "@nx/js:release-publish",
              "options": {},
              "parallelism": true
            },
            "test": {
              "cache": true,
              "configurations": {},
              "executor": "@nx/vite:test",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                }
              ],
              "options": {
                "reportsDirectory": "../../coverage/libs/utils"
              },
              "outputs": ["{options.reportsDirectory}"],
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "configurations": {},
              "dependsOn": ["^typecheck"],
              "executor": "nx:run-commands",
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/vite.config.ts",
                "{projectRoot}/vite.config.mts",
                "{projectRoot}/vitest.config.ts",
                "{projectRoot}/vitest.config.mts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.test.tsx",
                "{projectRoot}/src/**/*.spec.tsx",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.jsx",
                "{projectRoot}/src/**/*.spec.jsx",
                "{projectRoot}/src/**/*.d.ts",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "metadata": {
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                },
                "technologies": ["typescript"]
              },
              "options": {
                "command": "tsc --build --emitDeclarationOnly",
                "cwd": "libs/utils"
              },
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo"
              ],
              "parallelism": true,
              "syncGenerators": ["@nx/js:typescript-sync"]
            }
          }
        },
        "name": "utils",
        "type": "lib"
      },
      "web": {
        "data": {
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": [],
          "metadata": {
            "js": {
              "isInPackageManagerWorkspaces": true,
              "packageExports": {
                ".": {
                  "default": "./src/index.ts",
                  "import": "./src/index.ts",
                  "types": "./src/index.ts"
                }
              },
              "packageName": "@dex-web/web"
            },
            "targetGroups": {}
          },
          "name": "web",
          "projectType": "application",
          "root": "apps/web",
          "sourceRoot": "apps/web/src",
          "tags": ["npm:private"],
          "targets": {
            "build": {
              "cache": true,
              "configurations": {},
              "dependsOn": ["^build"],
              "executor": "nx:run-commands",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["next"]
                }
              ],
              "options": {
                "command": "next build",
                "cwd": "apps/web",
                "tty": false
              },
              "outputs": [
                "{projectRoot}/.next/!(cache)",
                "{projectRoot}/.next/!(cache)/**/*"
              ],
              "parallelism": true
            },
            "build-deps": {
              "configurations": {},
              "dependsOn": ["^build"],
              "executor": "nx:noop",
              "options": {},
              "parallelism": true
            },
            "dev": {
              "configurations": {},
              "continuous": true,
              "executor": "nx:run-commands",
              "options": {
                "command": "next dev",
                "cwd": "apps/web"
              },
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "configurations": {},
              "executor": "nx:run-commands",
              "options": {
                "command": "biome check  --write --config-path=apps/web/biome.json --verbose apps/web/**/*"
              },
              "parallelism": true
            },
            "serve": {
              "configurations": {
                "development": {
                  "buildTarget": "web:build:development",
                  "dev": true,
                  "turbo": true
                }
              },
              "continuous": true,
              "defaultConfiguration": "development",
              "executor": "@nx/next:server",
              "options": {
                "buildTarget": "web:build",
                "dev": true
              },
              "parallelism": true
            },
            "serve-static": {
              "configurations": {},
              "continuous": true,
              "dependsOn": ["build"],
              "executor": "nx:run-commands",
              "options": {
                "command": "next start",
                "cwd": "apps/web"
              },
              "parallelism": true
            },
            "start": {
              "configurations": {},
              "continuous": true,
              "dependsOn": ["build"],
              "executor": "nx:run-commands",
              "options": {
                "command": "next start",
                "cwd": "apps/web"
              },
              "parallelism": true
            },
            "test": {
              "cache": true,
              "configurations": {},
              "dependsOn": ["^build"],
              "executor": "@nx/vite:test",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest", "@vitest/ui", "happy-dom"]
                }
              ],
              "options": {
                "config": "apps/web/vite.config.ts",
                "reportsDirectory": "../../coverage/apps/web"
              },
              "outputs": ["{options.reportsDirectory}"],
              "parallelism": true
            },
            "watch-deps": {
              "configurations": {},
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects web --includeDependentProjects -- pnpm exec nx build-deps web"
              },
              "parallelism": true
            }
          }
        },
        "name": "web",
        "type": "app"
      },
      "web-e2e": {
        "data": {
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "implicitDependencies": ["web"],
          "metadata": {
            "js": {
              "isInPackageManagerWorkspaces": true,
              "packageExports": {
                ".": {
                  "default": "./src/index.ts",
                  "import": "./src/index.ts",
                  "types": "./src/index.ts"
                }
              },
              "packageName": "web-e2e"
            },
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/root.spec.ts", "e2e-ci"]
            }
          },
          "name": "web-e2e",
          "projectType": "application",
          "root": "apps/web-e2e",
          "sourceRoot": "apps/web-e2e/src",
          "tags": ["npm:private"],
          "targets": {
            "e2e": {
              "cache": true,
              "configurations": {},
              "dependsOn": [
                {
                  "projects": ["web"],
                  "target": "start"
                }
              ],
              "executor": "nx:run-commands",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "metadata": {
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                },
                "technologies": ["playwright"]
              },
              "options": {
                "command": "playwright test",
                "cwd": "apps/web-e2e"
              },
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report"
              ],
              "parallelism": true
            },
            "e2e-ci": {
              "cache": true,
              "configurations": {},
              "dependsOn": [
                {
                  "params": "forward",
                  "projects": "self",
                  "target": "e2e-ci--src/root.spec.ts"
                }
              ],
              "executor": "nx:noop",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "metadata": {
                "description": "Runs Playwright Tests in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                },
                "nonAtomizedTarget": "e2e",
                "technologies": ["playwright"]
              },
              "options": {},
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report"
              ],
              "parallelism": true
            },
            "e2e-ci--src/root.spec.ts": {
              "cache": true,
              "configurations": {},
              "dependsOn": [
                {
                  "projects": ["web"],
                  "target": "start"
                }
              ],
              "executor": "nx:run-commands",
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "metadata": {
                "description": "Runs Playwright Tests in src/root.spec.ts in CI",
                "help": {
                  "command": "pnpm exec playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                },
                "technologies": ["playwright"]
              },
              "options": {
                "command": "playwright test src/root.spec.ts --output=../../dist/.playwright/apps/web-e2e/test-output/src-root-spec-ts",
                "cwd": "apps/web-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "../../dist/.playwright/apps/web-e2e/playwright-report/src-root-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "../../dist/.playwright/apps/web-e2e/playwright-report/src-root-spec-ts"
                }
              },
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/test-output/src-root-spec-ts",
                "{workspaceRoot}/dist/.playwright/apps/web-e2e/playwright-report/src-root-spec-ts"
              ],
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "configurations": {},
              "executor": "nx:run-commands",
              "options": {
                "command": "biome check  --write --config-path=apps/web-e2e/biome.json --verbose apps/web-e2e/**/*"
              },
              "parallelism": true
            },
            "typecheck": {
              "cache": true,
              "configurations": {},
              "dependsOn": ["^typecheck"],
              "executor": "nx:run-commands",
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/**/*.ts",
                "{projectRoot}/**/*.js",
                "{projectRoot}/playwright.config.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.spec.js",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.test.js",
                "{projectRoot}/src/**/*.d.ts",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "metadata": {
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                },
                "technologies": ["typescript"]
              },
              "options": {
                "command": "tsc --build --emitDeclarationOnly",
                "cwd": "apps/web-e2e"
              },
              "outputs": [
                "{workspaceRoot}/dist/apps/web-e2e/**/*.d.ts",
                "{workspaceRoot}/dist/apps/web-e2e/**/*.d.ts.map",
                "{workspaceRoot}/dist/apps/web-e2e/tsconfig.lib.tsbuildinfo"
              ],
              "parallelism": true,
              "syncGenerators": ["@nx/js:typescript-sync"]
            }
          }
        },
        "name": "web-e2e",
        "type": "e2e"
      }
    }
  }
}
